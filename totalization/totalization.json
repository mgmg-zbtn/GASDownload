{
"files":[
{
"id":"60905fc2-3069-4553-aab5-414405876fb7",
"name":"appsscript",
"type":"json",
"source":"{\n  \"timeZone\": \"Asia/Tokyo\",\n  \"dependencies\": {\n    \"libraries\": [\n      {\n        \"userSymbol\": \"dayjs\",\n        \"version\": \"1\",\n        \"libraryId\": \"1ShsRhHc8tgPy5wGOzUvgEhOedJUQD53m-gd8lG2MOgs-dXC_aCZn9lFB\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"
},

{
"id":"2253f6a4-ae05-4e98-a811-fc3353ffaec1",
"name":"totalization",
"type":"server_js",
"source":"function totalization() {\n  dayjs.dayjs().locale(\u0027ja\u0027);\n\n  const spreadSheet \u003d SpreadsheetApp.openById(\u00271yeiu7a0m57C5pkJwNO-CqBvtZb_3-O9VpPxVOfKcYP4\u0027);\n  const totalizationSheet \u003d spreadSheet.getSheetByName(\u0027集計\u0027);\n  let fromMonth \u003d totalizationSheet.getRange(\"B1:C1\").getValue();\n  let toMonth \u003d totalizationSheet.getRange(\"B2:C2\").getValue();\n\n  // console.log(isSheetEists(spreadSheet, fromMonth));\n  // console.log(isSheetEists(spreadSheet, toMonth));\n  if (!isSheetEists(spreadSheet, fromMonth) || !isSheetEists(spreadSheet, toMonth)) {\n    // console.log(\u0027incorrect sheet\u0027);\n    return;\n  }\n\n  fromMonth \u003d dayjs.dayjs(fromMonth);\n  toMonth \u003d dayjs.dayjs(toMonth);\n\n  const diffMonth \u003d toMonth.diff(fromMonth, \u0027month\u0027);\n  let data \u003d [];\n  // console.log(toMonth.format(\u0027YYYY-M\u0027) + \u0027 - \u0027 + fromMonth.format(\u0027YYYY-M\u0027) + \u0027 \u003d \u0027+ diffMonth);\n\n  if (0 \u003c\u003d diffMonth) {\n    for (let i \u003d 0; i \u003c\u003d diffMonth ; i++) {\n      const m \u003d fromMonth.add(i, \u0027month\u0027);\n      const targetSheet \u003d spreadSheet.getSheetByName(m.format(\u0027YYYY-M\u0027));\n      const lastRow \u003d targetSheet.getLastRow();\n      const temp \u003d targetSheet.getRange(2, 1, lastRow - 1, 5).getValues();\n      data \u003d data.concat(temp);\n    }\n  } else {\n    // console.log(diffMonth + \u0027 error\u0027);\n    return;\n  }\n\n  // initialize sheet clear content\n  let tLastRow \u003d totalizationSheet.getLastRow();\n  totalizationSheet.getRange(5, 1, tLastRow, 17).clearContent();\n\n  var bo113 \u003d [];   // 少女\n  var bo112 \u003d [];   // 少年\n  var bo111 \u003d [];   // 大人\n  var bo111a \u003d[];   // 文庫コミック\n  var bo111b \u003d[];   // ワイドコミック\n  var bo111c \u003d[];   // コンビニコミック\n  var bo105 \u003d [];   // 児童書\n  var bo102 \u003d [];   // 雑誌\n  var bo141 \u003d [];   // 単行\n  var bo000 \u003d [];   // 111.112.113以外をまとめたもの\n\n  for (let i \u003d 0; i \u003c data.length; i++) {\n    switch (data[i][0]) {\n      case \u0027少女コミック\u0027: bo113[bo113.length] \u003d data[i]; break;\n      case \u0027少年コミック\u0027: bo112[bo112.length] \u003d data[i]; break;\n      case \u0027大人コミック\u0027: bo111[bo111.length] \u003d data[i]; break;\n      case \u0027文庫コミック\u0027: bo111a[bo111a.length] \u003d data[i]; break;\n      case \u0027ワイドコミック\u0027: bo111b[bo111b.length] \u003d data[i]; break;\n      case \u0027コンビニコミック\u0027: bo111c[bo111c.length] \u003d data[i]; break;\n      case \u0027児童書\u0027: bo105[bo105.length] \u003d data[i]; break;\n      case \u0027雑誌\u0027: bo102[bo102.length] \u003d data[i]; break;\n      case \u0027単行\u0027: bo141[bo141.length] \u003d data[i]; break;\n    }\n  }\n\n  bo113 \u003d convert(bo113);\n  bo112 \u003d convert(bo112);\n  bo111 \u003d convert(bo111);\n\n  bo000 \u003d bo000.concat(bo111a);\n  bo000 \u003d bo000.concat(bo111b);\n  bo000 \u003d bo000.concat(bo111c);\n  bo000 \u003d bo000.concat(bo105);\n  bo000 \u003d bo000.concat(bo102);\n  bo000 \u003d bo000.concat(bo141);\n\n  totalizationSheet.getRange(5, 1, bo113.length, 4).setValues(bo113);\n  totalizationSheet.getRange(5, 5, bo112.length, 4).setValues(bo112);\n  totalizationSheet.getRange(5, 9, bo111.length, 4).setValues(bo111);\n  totalizationSheet.getRange(5, 13, bo000.length, 5).setValues(bo000);\n\n  tLastRow \u003d totalizationSheet.getLastRow();\n  totalizationSheet.getRange(5, 1, tLastRow, 4).sort([\n    {column: 1, ascending: true},\n    {column: 2, ascending: true},\n    {column: 3, ascending: true},\n    {column: 4, ascending: true},\n  ]);\n  totalizationSheet.getRange(5, 5, tLastRow, 4).sort([\n    {column: 5, ascending: true},\n    {column: 6, ascending: true},\n    {column: 7, ascending: true},\n    {column: 8, ascending: true},\n  ]);\n  totalizationSheet.getRange(5, 9, tLastRow, 4).sort([\n    {column: 9, ascending: true},\n    {column: 10, ascending: true},\n    {column: 11, ascending: true},\n    {column: 12, ascending: true},\n  ]);\n  totalizationSheet.getRange(5, 13, tLastRow, 5).sort([\n    {column: 13, ascending: true},\n    {column: 14, ascending: true},\n    {column: 15, ascending: true},\n    {column: 16, ascending: true},\n    {column: 17, ascending: true},\n  ]);\n}\n"
},
{
"id":"cf0354c7-c3bb-4523-bf11-98c07ec212bd","name":"util","type":"server_js","source":"function convert(data) {\n\n  let l \u003d Object.keys(data).length;\n  let temp \u003d new Array(l);\n  for (let i \u003d 0; i \u003c l; i++) {\n    temp[i] \u003d new Array(4);\n    temp[i][0] \u003d data[i][1];\n    temp[i][1] \u003d data[i][2];\n    temp[i][2] \u003d data[i][3];\n    temp[i][3] \u003d data[i][4];\n  }\n\n  return temp;\n}\n\n\nfunction isSheetEists(spreadSheet, targetSheet) {\n  let temp \u003d spreadSheet.getSheets();\n  for (let i \u003d 0; i \u003c temp.length; i++) {\n    if (targetSheet \u003d\u003d\u003d temp[i].getName()) return true;\n  }\n  return false;\n}\n"},{"id":"123d7402-ad6c-4553-98d3-d523ce3c63a9","name":"sandbox","type":"server_js","source":"\nfunction sandbox() {\n\n  let text \u003d \u0027ヤフオク\u0027;\n  let pattern \u003d /ヤフオク/g;\n\n  console.log(text.match(pattern));\n}\n\n// function sandbox() {\n\n//   let arr \u003d [[1,2], [2,4], [2,3], [3,4], [3,6], [3,8], [9,10], [2,0]];\n\n//   for (let i \u003d 0; i \u003c arr.length; i++) {\n//     const temp \u003d arr[i];\n//     if (2 \u003d\u003d\u003d arr[i][0]) {\n//       arr.splice(i, 1);\n//       i -\u003d 1;\n//     }\n//   }\n\n//   for (let i \u003d 0; i \u003c arr.length; i++) {\n//     console.log(i + \":\" + arr[i]);\n//   }\n\n// }\n\n\n// reduction cut pattern\n// function sandbox() {\n//   // let arr \u003d [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n//   let arr \u003d [[1,2], [3,4], [3,6], [3,8], [9,10]];\n//   for (let i \u003d 0; i \u003c arr.length - 1; i++) {\n//     const temp \u003d arr[i];\n//     if (temp[0] \u003d\u003d\u003d arr[i + 1][0]) {\n//       arr.splice(i, 1);\n//       i -\u003d 1;\n//     }\n//   }\n//   for (let i \u003d 0; i \u003c arr.length; i++) {\n//     console.log(i + \":\" + arr[i]);\n//   }\n// }\n"},{"id":"a4d46ba9-54a5-4ed7-bf29-bb71eec5781a","name":"reduction","type":"server_js","source":"function reduction() {\n\n  totalization();\n\n  const spreadSheet \u003d SpreadsheetApp.openById(\u00271yeiu7a0m57C5pkJwNO-CqBvtZb_3-O9VpPxVOfKcYP4\u0027);\n  const totalizationSheet \u003d spreadSheet.getSheetByName(\u0027集計\u0027);\n  let lastRow \u003d totalizationSheet.getLastRow();\n\n  let bo113 \u003d totalizationSheet.getRange(5, 1, lastRow, 4).getValues();\n  bo113 \u003d reductA(bo113);\n  totalizationSheet.getRange(5, 1, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 1, bo113.length, 4).setValues(bo113);\n  \n  let bo112 \u003d totalizationSheet.getRange(5, 5, lastRow - 1, 4).getValues();\n  bo113 \u003d reductA(bo112);\n  totalizationSheet.getRange(5, 5, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 5, bo112.length, 4).setValues(bo112);\n\n  let bo111 \u003d totalizationSheet.getRange(5, 9, lastRow - 1, 4).getValues();\n  bo111 \u003d reductA(bo111);\n  totalizationSheet.getRange(5, 9, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 9, bo111.length, 4).setValues(bo111);\n\n  let bo000 \u003d totalizationSheet.getRange(5, 13, lastRow - 1, 5).getValues();\n  bo000 \u003d reductB(bo000);\n  totalizationSheet.getRange(5, 13, lastRow - 1, 5).clear();\n  totalizationSheet.getRange(5, 13, bo000.length, 5).setValues(bo000);\n\n}\n\nfunction reductA(data) {\n  for (let i \u003d 0; i \u003c data.length - 1; i++) {\n    const temp \u003d data[i];\n    if (temp[0] \u003d\u003d\u003d data[i + 1][0] \u0026\u0026\n        temp[1] \u003d\u003d\u003d data[i + 1][1] \u0026\u0026\n        temp[2] \u003d\u003d\u003d data[i + 1][2] \u0026\u0026\n        temp[3] \u003d\u003d\u003d data[i + 1][3]) {\n      data.splice(i, 1);\n      i -\u003d 1;\n    }\n  }\n  return data;\n}\n\nfunction reductB(data) {\n  for (let i \u003d 0; i \u003c data.length - 1; i++) {\n    const temp \u003d data[i];\n    if (temp[0] \u003d\u003d\u003d data[i + 1][0] \u0026\u0026\n        temp[1] \u003d\u003d\u003d data[i + 1][1] \u0026\u0026\n        temp[2] \u003d\u003d\u003d data[i + 1][2] \u0026\u0026\n        temp[3] \u003d\u003d\u003d data[i + 1][3] \u0026\u0026\n        temp[4] \u003d\u003d\u003d data[i + 1][4]) {\n      data.splice(i, 1);\n      i -\u003d 1;\n    }\n  }\n  return data;\n}"},{"id":"ee6ec9e9-694a-43f0-ad64-4e0f5edc9751","name":"yahoo","type":"server_js","source":"function yahoo() {\n\n  reduction();\n\n  const spreadSheet \u003d SpreadsheetApp.openById(\u00271yeiu7a0m57C5pkJwNO-CqBvtZb_3-O9VpPxVOfKcYP4\u0027);\n  const totalizationSheet \u003d spreadSheet.getSheetByName(\u0027集計\u0027);\n  let lastRow \u003d totalizationSheet.getLastRow();\n\n  let bo113 \u003d totalizationSheet.getRange(5, 1, lastRow, 4).getValues();\n  bo113 \u003d picupA(bo113);\n  totalizationSheet.getRange(5, 1, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 1, bo113.length, 4).setValues(bo113);\n  \n  let bo112 \u003d totalizationSheet.getRange(5, 5, lastRow - 1, 4).getValues();\n  bo113 \u003d picupA(bo112);\n  totalizationSheet.getRange(5, 5, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 5, bo112.length, 4).setValues(bo112);\n\n  let bo111 \u003d totalizationSheet.getRange(5, 9, lastRow - 1, 4).getValues();\n  bo111 \u003d picupA(bo111);\n  totalizationSheet.getRange(5, 9, lastRow - 1, 4).clear();\n  totalizationSheet.getRange(5, 9, bo111.length, 4).setValues(bo111);\n\n  let bo000 \u003d totalizationSheet.getRange(5, 13, lastRow - 1, 5).getValues();\n  bo000 \u003d picupB(bo000);\n  totalizationSheet.getRange(5, 13, lastRow - 1, 5).clear();\n  totalizationSheet.getRange(5, 13, bo000.length, 5).setValues(bo000);\n\n}\n\n\nfunction picupA(data) {\n  for (let i \u003d 0; i \u003c data.length; i++) {\n    if (data[i][3].match(/ヤフオク/g) \u003d\u003d\u003d null) {\n      data.splice(i, 1);\n      i -\u003d 1;\n    }\n  }\n  return data;\n}\n\nfunction picupB(data) {\n  for (let i \u003d 0; i \u003c data.length; i++) {\n    if (data[i][4].match(/ヤフオク/g) \u003d\u003d\u003d null) {\n      data.splice(i, 1);\n      i -\u003d 1;\n    }\n  }\n  return data;\n}"}]}